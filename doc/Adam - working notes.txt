Cleanups to do:

  - Addresses. Factor it all so that I can easily switch to untagged addresses.
  - Factor the layout stuff so that it's a bit more uniform and elegant about handling oops versus addresses. (C is really nice in that way; how close can we get to that?)
  - Stuff that tries to avoid cloning... is there a way to make it clear which stuff that is? Draw a clear fence around it? And avoid duplication with regular stuff? (The problem is that there's some stuff that needs failblocks when running on a remote image, but needs to avoid cloning when running in a local image.)

----

There's gotta be a way to avoid having to pull in the whole object table every time anything changes in it. Why not just pull in the parts we're accessing?

----

Remember to clean up the aaaaa and aaaaaaa things.

----

Fix the compilerTester. Right, right - I broke it, made it require the compilationRequester.

----

Inlining plan:

  - Fix the bug where the source-level UI crashes when inlined blocks are involved. (I've got a klein mirrors blockMethodActivation that gives me an error when I call lexicalParent on it.)
  - Flesh out the list of stuff that needs to be pre-inlined to make the system ramp up quickly enough.

----

Fix the copyright notices!!!

