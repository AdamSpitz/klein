/* THIS FILE WAS AUTO-GENERATED BY klein objectSystemSpitterOuter */

class MapLayout : public ObjVectorLayout {
  public: 
        virtual char* mapType() {return "map";}
        virtual bool areSlotsMutable() {return false;}
        virtual bool isActivation() {return false;}
        virtual bool isAssignment() {return false;}
        virtual bool isBlock() {return false;}
        virtual bool isBlockMethod() {return false;}
        virtual bool isBlockMethodActivation() {return false;}
        virtual bool isByteVector() {return false;}
        virtual bool isFctProxy() {return false;}
        virtual bool isFloat() {return false;}
        virtual bool isImmediate() {return false;}
        virtual bool isImmutable() {return false;}
        virtual bool isInteger() {return false;}
        virtual bool isMethod() {return false;}
        virtual bool isMethodActivation() {return false;}
        virtual bool isMethodLike() {return false;}
        virtual bool isMirror() {return false;}
        virtual bool isNMethod() {return false;}
        virtual bool isOuterMethod() {return false;}
        virtual bool isProcess() {return false;}
        virtual bool isProfiler() {return false;}
        virtual bool isProgrammableSlots() {return false;}
        virtual bool isProxy() {return false;}
        virtual bool isSlots() {return false;}
        virtual bool isString() {return false;}
        virtual bool isVector() {return false;}
        virtual bool isVectorish() {return false;}
        virtual bool isVframe() {return false;}
# include "MapLayout_otherDecls.incl.hh"
};
class SlotsMapLayout : public MapLayout {
  public: 
        virtual char* mapType() {return "slotsMap";}
        virtual bool isProgrammableSlots() {return true;}
        virtual bool isSlots() {return true;}
        virtual ObjectLayout* myLayout();
# include "SlotsMapLayout_otherDecls.incl.hh"
};
class SlotsMapDepsLayout : public SlotsMapLayout {
  public: 
        virtual char* mapType() {return "slotsMapDeps";}
        virtual bool areSlotsMutable() {return true;}
};
class BlockMapLayout : public SlotsMapDepsLayout {
  public: 
        virtual char* mapType() {return "blockMap";}
        virtual bool isBlock() {return true;}
        virtual ObjectLayout* myLayout();
};
class AbstractVectorMapLayout : public SlotsMapDepsLayout {
  public: 
        virtual char* mapType() {return "abstractVectorMap";}
        virtual bool isSlots() {return false;}
        virtual bool isVectorish() {return true;}
};
class ObjVectorMapLayout : public AbstractVectorMapLayout {
  public: 
        virtual char* mapType() {return "objVectorMap";}
        virtual bool isVector() {return true;}
        virtual ObjectLayout* myLayout();
};
class ByteVectorMapLayout : public AbstractVectorMapLayout {
  public: 
        virtual char* mapType() {return "byteVectorMap";}
        virtual bool isByteVector() {return true;}
        virtual ObjectLayout* myLayout();
};
class StringMapLayout : public ByteVectorMapLayout {
  public: 
        virtual char* mapType() {return "stringMap";}
        virtual bool areSlotsMutable() {return false;}
        virtual bool isProgrammableSlots() {return false;}
        virtual bool isString() {return true;}
};
class CodeLikeSlotsMapLayout : public SlotsMapDepsLayout {
  public: 
        virtual char* mapType() {return "codeLikeSlotsMap";}
        virtual bool isMethodLike() {return true;}
        virtual bool isSlots() {return false;}
};
class AssignmentMapLayout : public CodeLikeSlotsMapLayout {
  public: 
        virtual char* mapType() {return "assignmentMap";}
        virtual bool areSlotsMutable() {return false;}
        virtual bool isAssignment() {return true;}
};
class ProcessMapLayout : public SlotsMapDepsLayout {
  public: 
        virtual char* mapType() {return "processMap";}
        virtual bool isProcess() {return true;}
        virtual bool isSlots() {return false;}
};
class MirrorMapLayout : public SlotsMapDepsLayout {
  public: 
        virtual char* mapType() {return "mirrorMap";}
        virtual bool isMirror() {return true;}
        virtual bool isSlots() {return false;}
};
class CodeSlotsMapLayout : public SlotsMapLayout {
  public: 
        virtual char* mapType() {return "codeSlotsMap";}
        virtual bool isSlots() {return false;}
};
class MethodMapLayout : public CodeSlotsMapLayout {
  public: 
        virtual char* mapType() {return "methodMap";}
        virtual bool areSlotsMutable() {return true;}
        virtual bool isMethodLike() {return true;}
# include "MethodMapLayout_otherDecls.incl.hh"
};
class OuterMethodMapLayout : public MethodMapLayout {
  public: 
        virtual char* mapType() {return "outerMethodMap";}
        virtual bool isMethod() {return true;}
        virtual bool isOuterMethod() {return true;}
};
class BlockMethodMapLayout : public MethodMapLayout {
  public: 
        virtual char* mapType() {return "blockMethodMap";}
        virtual bool isBlockMethod() {return true;}
};
class ImmediateMapLayout : public MapLayout {
  public: 
        virtual char* mapType() {return "immediateMap";}
        virtual bool isImmediate() {return true;}
        virtual bool isImmutable() {return true;}
        virtual ObjectLayout* myLayout();
};
class SmiMapLayout : public ImmediateMapLayout {
  public: 
        virtual char* mapType() {return "smiMap";}
        virtual bool isInteger() {return true;}
        virtual ObjectLayout* myLayout();
};
class FloatMapLayout : public ImmediateMapLayout {
  public: 
        virtual char* mapType() {return "floatMap";}
        virtual bool isFloat() {return true;}
        virtual ObjectLayout* myLayout();
};

/* THIS FILE WAS AUTO-GENERATED BY klein objectSystemSpitterOuter */